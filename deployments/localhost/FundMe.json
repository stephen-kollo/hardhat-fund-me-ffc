{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Funded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd761568e1bd5d5c8fafa9f45a769f7892edfda27bb84129984225fb22d48cf30",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1084712",
    "logsBloom": "0x
    "blockHash": "0x0024f224d33c081fd49aae667d617373d23cfd42d13aaa88c0527d770c754342",
    "transactionHash": "0xd761568e1bd5d5c8fafa9f45a769f7892edfda27bb84129984225fb22d48cf30",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1084712",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "bbbfcd3a556df275b8b6d3c358f4d355",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Stephen Kollo\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Demo of sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n/// @title A contract for crowd funding\\n/// @author Stephen Kollo\\n/// @notice Demo of sample funding contract\\n/// @dev This implements price feeds as our library\\n\\ncontract FundMe {\\n    // Type Declarations..\\n    using PriceConverter for uint256;\\n\\n    // State Vars..\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    // Events..\\n    event Funded(address indexed from, uint256 amount);\\n\\n    // Modifiers..\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    // Functions..\\n    /* Order: \\n        constructor, \\n        receive, \\n        fallback, \\n        external, \\n        public, \\n        internal, \\n        private, \\n        view/pure\\n    */\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\\\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback()\\n    //     /   \\\\\\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        // // ETH/USD price feed address of Goerli Network.\\n        // AggregatorV3Interface priceFeed = AggregatorV3Interface(\\n        //         0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n        // );\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n\\n        s_funders = new address[](0);\\n\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x36be1c77305a174a207504731e0417cb7968a0f82133fc3fa7e746184174f45f\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n        // We could make this public, but then we'd have to deploy it\\n        function getPrice(AggregatorV3Interface priceFeed)\\n                internal\\n                view\\n                returns (uint256)\\n        {\\n                // Goerli ETH / USD Address\\n                // https://docs.chain.link/docs/ethereum-addresses/\\n\\n                (, int256 answer, , , ) = priceFeed.latestRoundData();\\n                // ETH/USD rate in 18 digit\\n                return uint256(answer * 10000000000);\\n                // or (Both will do the same thing)\\n                // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n        }\\n\\n        // 1000000000\\n        function getConversionRate(\\n                uint256 ethAmount,\\n                AggregatorV3Interface priceFeed\\n        ) internal view returns (uint256) {\\n                uint256 ethPrice = getPrice(priceFeed);\\n                uint256 ethAmountInUsd = (ethPrice * ethAmount) /\\n                        1000000000000000000;\\n                // or (Both will do the same thing)\\n                // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n                // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n                return ethAmountInUsd;\\n        }\\n}\\n\",\"keccak256\":\"0x485e42337100163d4f0a2ca93f9df5bd7ee9d9ba95dc248d9dd9ddc44d6acbd6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013bb380380620013bb83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b6080516112426200017960003960008181610415015281816106a1015261094501526112426000f3fe60806040526004361061008a5760003560e01c806354861af71161005957806354861af71461014d5780636b69a5921461018a578063b60d4288146101b5578063be2693f0146101bf578063dba6335f146101c957610099565b80630d8e6e2c146100a35780630ec3b027146100ce5780631bf6132d146100f95780633ccfd60b1461013657610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100b861032e565b6040516100c59190610b03565b60405180910390f35b3480156100da57600080fd5b506100e36103d5565b6040516100f09190610b9d565b60405180910390f35b34801561010557600080fd5b50610120600480360381019061011b9190610bfb565b6103fb565b60405161012d9190610b03565b60405180910390f35b34801561014257600080fd5b5061014b610413565b005b34801561015957600080fd5b50610174600480360381019061016f9190610c54565b610653565b6040516101819190610c90565b60405180910390f35b34801561019657600080fd5b5061019f610692565b6040516101ac9190610b03565b60405180910390f35b6101bd6101f4565b005b6101c761069f565b005b3480156101d557600080fd5b506101de610943565b6040516101eb9190610c90565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096790919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610d08565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610d57565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561039857600080fd5b505afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190610dc2565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610543576000600182815481106104be576104bd610def565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053b90610e1e565b91505061049b565b50600067ffffffffffffffff81111561055f5761055e610e67565b5b60405190808252806020026020018201604052801561058d5781602001602082028036833780820191505090505b50600190805190602001906105a3929190610a43565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105ca90610ec7565b60006040518083038185875af1925050503d8060008114610607576040519150601f19603f3d011682016040523d82523d6000602084013e61060c565b606091505b5050905080610650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064790610f28565b60405180910390fd5b50565b6001818154811061066357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610724576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075e575b5050505050905060005b81518110156108325760008282815181106107d0576107cf610def565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082a90610e1e565b9150506107b2565b50600067ffffffffffffffff81111561084e5761084d610e67565b5b60405190808252806020026020018201604052801561087c5781602001602082028036833780820191505090505b5060019080519060200190610892929190610a43565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108b990610ec7565b60006040518083038185875af1925050503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b505090508061093f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093690610f28565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610973836109a3565b90506000670de0b6b3a7640000858361098c9190610f48565b6109969190610fd1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109ec57600080fd5b505afa158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a24919061107a565b5050509150506402540be40081610a3b91906110f5565b915050919050565b828054828255906000526020600020908101928215610abc579160200282015b82811115610abb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a63565b5b509050610ac99190610acd565b5090565b5b80821115610ae6576000816000905550600101610ace565b5090565b6000819050919050565b610afd81610aea565b82525050565b6000602082019050610b186000830184610af4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b63610b5e610b5984610b1e565b610b3e565b610b1e565b9050919050565b6000610b7582610b48565b9050919050565b6000610b8782610b6a565b9050919050565b610b9781610b7c565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b600080fd5b6000610bc882610b1e565b9050919050565b610bd881610bbd565b8114610be357600080fd5b50565b600081359050610bf581610bcf565b92915050565b600060208284031215610c1157610c10610bb8565b5b6000610c1f84828501610be6565b91505092915050565b610c3181610aea565b8114610c3c57600080fd5b50565b600081359050610c4e81610c28565b92915050565b600060208284031215610c6a57610c69610bb8565b5b6000610c7884828501610c3f565b91505092915050565b610c8a81610bbd565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cf2601b83610cab565b9150610cfd82610cbc565b602082019050919050565b60006020820190508181036000830152610d2181610ce5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6282610aea565b9150610d6d83610aea565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da257610da1610d28565b5b828201905092915050565b600081519050610dbc81610c28565b92915050565b600060208284031215610dd857610dd7610bb8565b5b6000610de684828501610dad565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2982610aea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5c57610e5b610d28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eb1600083610e96565b9150610ebc82610ea1565b600082019050919050565b6000610ed282610ea4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f12600b83610cab565b9150610f1d82610edc565b602082019050919050565b60006020820190508181036000830152610f4181610f05565b9050919050565b6000610f5382610aea565b9150610f5e83610aea565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9757610f96610d28565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdc82610aea565b9150610fe783610aea565b925082610ff757610ff6610fa2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61102181611002565b811461102c57600080fd5b50565b60008151905061103e81611018565b92915050565b6000819050919050565b61105781611044565b811461106257600080fd5b50565b6000815190506110748161104e565b92915050565b600080600080600060a0868803121561109657611095610bb8565b5b60006110a48882890161102f565b95505060206110b588828901611065565b94505060406110c688828901610dad565b93505060606110d788828901610dad565b92505060806110e88882890161102f565b9150509295509295909350565b600061110082611044565b915061110b83611044565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561114a57611149610d28565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561118757611186610d28565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111c4576111c3610d28565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561120157611200610d28565b5b82820290509291505056fea26469706673582212201fb9917e28a567659ce130715b8499bd134449bb2dafa131ac68facba66babb564736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061008a5760003560e01c806354861af71161005957806354861af71461014d5780636b69a5921461018a578063b60d4288146101b5578063be2693f0146101bf578063dba6335f146101c957610099565b80630d8e6e2c146100a35780630ec3b027146100ce5780631bf6132d146100f95780633ccfd60b1461013657610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100b861032e565b6040516100c59190610b03565b60405180910390f35b3480156100da57600080fd5b506100e36103d5565b6040516100f09190610b9d565b60405180910390f35b34801561010557600080fd5b50610120600480360381019061011b9190610bfb565b6103fb565b60405161012d9190610b03565b60405180910390f35b34801561014257600080fd5b5061014b610413565b005b34801561015957600080fd5b50610174600480360381019061016f9190610c54565b610653565b6040516101819190610c90565b60405180910390f35b34801561019657600080fd5b5061019f610692565b6040516101ac9190610b03565b60405180910390f35b6101bd6101f4565b005b6101c761069f565b005b3480156101d557600080fd5b506101de610943565b6040516101eb9190610c90565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461096790919063ffffffff16565b1015610274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026b90610d08565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102c29190610d57565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561039857600080fd5b505afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d09190610dc2565b905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610498576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610543576000600182815481106104be576104bd610def565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053b90610e1e565b91505061049b565b50600067ffffffffffffffff81111561055f5761055e610e67565b5b60405190808252806020026020018201604052801561058d5781602001602082028036833780820191505090505b50600190805190602001906105a3929190610a43565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105ca90610ec7565b60006040518083038185875af1925050503d8060008114610607576040519150601f19603f3d011682016040523d82523d6000602084013e61060c565b606091505b5050905080610650576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064790610f28565b60405180910390fd5b50565b6001818154811061066357600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610724576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107a857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161075e575b5050505050905060005b81518110156108325760008282815181106107d0576107cf610def565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061082a90610e1e565b9150506107b2565b50600067ffffffffffffffff81111561084e5761084d610e67565b5b60405190808252806020026020018201604052801561087c5781602001602082028036833780820191505090505b5060019080519060200190610892929190610a43565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108b990610ec7565b60006040518083038185875af1925050503d80600081146108f6576040519150601f19603f3d011682016040523d82523d6000602084013e6108fb565b606091505b505090508061093f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093690610f28565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610973836109a3565b90506000670de0b6b3a7640000858361098c9190610f48565b6109969190610fd1565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109ec57600080fd5b505afa158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a24919061107a565b5050509150506402540be40081610a3b91906110f5565b915050919050565b828054828255906000526020600020908101928215610abc579160200282015b82811115610abb5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a63565b5b509050610ac99190610acd565b5090565b5b80821115610ae6576000816000905550600101610ace565b5090565b6000819050919050565b610afd81610aea565b82525050565b6000602082019050610b186000830184610af4565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610b63610b5e610b5984610b1e565b610b3e565b610b1e565b9050919050565b6000610b7582610b48565b9050919050565b6000610b8782610b6a565b9050919050565b610b9781610b7c565b82525050565b6000602082019050610bb26000830184610b8e565b92915050565b600080fd5b6000610bc882610b1e565b9050919050565b610bd881610bbd565b8114610be357600080fd5b50565b600081359050610bf581610bcf565b92915050565b600060208284031215610c1157610c10610bb8565b5b6000610c1f84828501610be6565b91505092915050565b610c3181610aea565b8114610c3c57600080fd5b50565b600081359050610c4e81610c28565b92915050565b600060208284031215610c6a57610c69610bb8565b5b6000610c7884828501610c3f565b91505092915050565b610c8a81610bbd565b82525050565b6000602082019050610ca56000830184610c81565b92915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610cf2601b83610cab565b9150610cfd82610cbc565b602082019050919050565b60006020820190508181036000830152610d2181610ce5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6282610aea565b9150610d6d83610aea565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610da257610da1610d28565b5b828201905092915050565b600081519050610dbc81610c28565b92915050565b600060208284031215610dd857610dd7610bb8565b5b6000610de684828501610dad565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610e2982610aea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e5c57610e5b610d28565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610eb1600083610e96565b9150610ebc82610ea1565b600082019050919050565b6000610ed282610ea4565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610f12600b83610cab565b9150610f1d82610edc565b602082019050919050565b60006020820190508181036000830152610f4181610f05565b9050919050565b6000610f5382610aea565b9150610f5e83610aea565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f9757610f96610d28565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610fdc82610aea565b9150610fe783610aea565b925082610ff757610ff6610fa2565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61102181611002565b811461102c57600080fd5b50565b60008151905061103e81611018565b92915050565b6000819050919050565b61105781611044565b811461106257600080fd5b50565b6000815190506110748161104e565b92915050565b600080600080600060a0868803121561109657611095610bb8565b5b60006110a48882890161102f565b95505060206110b588828901611065565b94505060406110c688828901610dad565b93505060606110d788828901610dad565b92505060806110e88882890161102f565b9150509295509295909350565b600061110082611044565b915061110b83611044565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561114a57611149610d28565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561118757611186610d28565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111c4576111c3610d28565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561120157611200610d28565b5b82820290509291505056fea26469706673582212201fb9917e28a567659ce130715b8499bd134449bb2dafa131ac68facba66babb564736f6c63430008090033",
  "devdoc": {
    "author": "Stephen Kollo",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Demo of sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}